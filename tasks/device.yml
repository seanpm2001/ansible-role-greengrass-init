# Copyright Â© 2018 VMware, Inc. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
---
# Create the necessary bits for a Greengrass device to be represented

- name: set device_name
  set_fact:
    device_name: "{{ greengrass_device_stub }}{{ device_index }}"
  when: device_index is defined

- name: Create a policy for the device thing
  command: >
    {{ aws }} iot create-policy --policy-name "{{ device_name }}-policy"
    --policy-document {{ greengrass_device_policy }}
  register: iot_device_policy_create
  when:
    - iot_thing_policy_list is defined
    - "device_name ~ '-policy' not in iot_thing_policy_list"

- name: create the thing
  block:
    - command: >
        {{ aws }} iot create-thing --thing-name "{{ device_name }}"
      register: iot_thing_create
    - set_fact:
        thing_arn: >-
          {{ iot_thing_create.stdout | from_json | json_query('thingArn') }}
    - command: "{{ aws }} iot create-keys-and-certificate --set-as-active"
      register: keys_and_certs
    - set_fact:
        certificate_pem: >-
          {{ keys_and_certs.stdout |
          from_json | json_query('certificatePem') }}
    - set_fact:
        certificate_key: >-
          {{ keys_and_certs.stdout | from_json |
          json_query('keyPair.PrivateKey') }}
    - set_fact:
        certificate_arn: >-
          {{ keys_and_certs.stdout | from_json |
          json_query('certificateArn') }}
    - set_fact:
        certificate_id: >-
          {{ keys_and_certs.stdout | from_json | json_query('certificateId') }}
    - name: create temporary directory for thing config
      tempfile:
        state: directory
        suffix: "{{ device_name }}"
      register: device_temp
    - name: download-root-ca
      get_url:
        url: "http://www.symantec.com/content/en/us/enterprise/verisign/roots/VeriSign-Class%203-Public-Primary-Certification-Authority-G5.pem"
        dest: "{{ device_temp.path }}/root.ca.pem"
        checksum: "{{ root_ca_checksum }}"
    - copy:
        content: "{{ certificate_key }}"
        dest: "{{ device_temp.path }}/{{ device_name }}.private.key"
    - copy:
        content: "{{ certificate_pem }}"
        dest: "{{ device_temp.path }}/{{ device_name }}.cert.pem"
    - archive:
        path: "{{ device_temp.path }}/*"
        dest: "{{ device_temp.path }}/{{ device_name }}-setup.tar.gz"
    - name: upload-greengrass-config-s3
      command: >
        {{ aws }} s3 cp {{ device_temp.path }}/{{ device_name }}-setup.tar.gz
        s3://{{ greengrass_s3_bucket }}/
      when:
        - greengrass_s3_bucket is defined
        - >-
          (skip_s3_uploads is defined and not skip_s3_uploads) or
          skip_s3_uploads is undefined
    - command: >
        {{ aws }} iot attach-principal-policy
        --policy-name '{{ device_name }}-policy'
        --principal '{{ certificate_arn }}'
    - command: >
        {{ aws }} iot attach-thing-principal
        --thing-name '{{ device_name }}'
        --principal '{{ certificate_arn }}'
  rescue:
    - debug:
        msg: "Failed to create {{ device_name }}! Destroying what was created."
    - command: >
        {{ aws }} iot delete-thing --thing-name "{{ device_name }}"
      ignore_errors: yes
    - command: >
        {{ aws }} iot update-certificate
        --certificate-id "{{ certificate_id }}" --new-status INACTIVE
      ignore_errors: yes
    - command: >
        {{ aws }} iot delete-certificate
        --certificate-id "{{ certificate_id }}"
      ignore_errors: yes
    - command: >
        {{ aws }} s3 rm
        s3://{{ greengrass_s3_bucket }}/{{ device_temp.path }}/{{ device_name }}-setup.tar.gz
      ignore_errors: yes
    - fail: msg="Failed to create device {{ device_name }}!"
  when:
    - iot_thing_list is defined
    - device_name not in iot_thing_list
